@model Web_IT_HELPDESK.Models.ContractViewModel

@{
    ViewBag.Title = "CreateCONTRACTViewModel2";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">

<!-- Latest compiled and minified JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>

<!--CustomInputFile -->
<link href="~/vendors/CustomInputFile/css/CustomInputFile.css" rel="stylesheet" />


@section Style {
    <style>
        .upload-wrapper {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .upload-wrapper .file-upload {
                height: 40px;
                width: 40px;
                border-radius: 50%;
                position: relative;
                display: flex;
                justify-content: center;
                align-items: center;
                border: 4px solid #ffffff;
                overflow: hidden;
                background-image: linear-gradient(to bottom, #2590eb 50%, #ffffff 50%);
                background-size: 100% 200%;
                transition: all 1s;
                color: #ffffff;
                font-size: 20px;
                cursor: pointer;
            }

                .upload-wrapper .file-upload input[type="file"] {
                    height: 40px;
                    width: 40px;
                    position: absolute;
                    top: 0;
                    left: 0;
                    opacity: 0;
                    cursor: pointer;
                }

                .upload-wrapper .file-upload i {
                    position: initial;
                }

                .upload-wrapper .file-upload:hover {
                    background-position: 0 -100%;
                    color: #2590eb;
                }

        ::-webkit-file-upload-button {
            cursor: pointer;
        }
    </style>
}

<div class="col-md-12 panel-info">
    <div class="content-box-header panel-heading">
        <div class="panel-title ">Add New Contract</div>

        <div class="panel-options">
            <a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
            <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>
        </div>
    </div>
    <div class="content-box-large box-with-header">
        @using (Html.BeginForm("CreateCONTRACTViewModel2", "CONTRACT", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-md-8">
                        @Html.LabelFor(model => model.CONTRACT.VENDOR, "Vendor", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CONTRACT.VENDOR, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CONTRACT.VENDOR, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.CONTRACT.PHONE, "Phone", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CONTRACT.PHONE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CONTRACT.PHONE, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.CONTRACT.ADREES, "Address", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CONTRACT.ADREES, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CONTRACT.ADREES, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-8">
                        @Html.LabelFor(model => model.CONTRACT.CONTRACTNAME, "Contract Name", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CONTRACT.CONTRACTNAME, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CONTRACT.CONTRACTNAME, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.CONTRACT.REPRESENTATION, "Representation", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CONTRACT.REPRESENTATION, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CONTRACT.REPRESENTATION, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.CONTRACT.CONTRACT_TYPE_ID, "Contract Type", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CONTRACT.CONTRACT_TYPE_ID, new SelectList(Model.Contract_Types, "CONTRACT_TYPE_ID", "CONTRACT_TYPE_NAME"))
                        @Html.ValidationMessageFor(model => model.CONTRACT.CONTRACT_TYPE_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.CONTRACT.PERIODID, "Period", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CONTRACT.PERIODID, new SelectList(Model.Periods, "PERIOD_ID", "PERIOD_NAME"))
                        @Html.ValidationMessageFor(model => model.CONTRACT.PERIODID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.CONTRACT.DATE, "Date", htmlAttributes: new { @class = "control-label" })
                        <div class="input-group date" id="contractDate">
                            @Html.Editor("Date", new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.HiddenFor(model => model.CONTRACT.DATE, new { @id = "contractDate_val", @Value = "" })
                        @Html.ValidationMessageFor(model => model.CONTRACT.DATE, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.CONTRACT.MONTHS, "Months", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CONTRACT.MONTHS, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CONTRACT.MONTHS, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.ContractFile, "Contract File", htmlAttributes: new { @class = "control-label" }) :
                        <div class="box-inputfile-left">
                            @Html.TextBoxFor(model => model.ContractFile, new { @class = "inputfile inputfile-1", id = "file-1", type = "file", data_multiple_caption = "{count} files selected", multiple = "multiple" })
                            <label for="file-1"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17"><path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z" /></svg> <span>Choose a file&hellip;</span></label>
                        </div>
                        @Html.ValidationMessageFor(model => model.ContractFile, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6"></div>
                </div>
            </div>
            <hr />
            <div style="text-align:right">
                <input type="button" id="add_row" class="btn btn-info" value="Add Sub-Contract">
            </div>
            <div class="row clearfix">
                <div class="col-md-12">
                    <table class="display nowrap" id="tab_logic" style="width:100%">
                        <thead>
                            <tr>
                                <th class="text-center">
                                    #
                                </th>
                                <th class="text-center">
                                    DATE
                                </th>
                                <th class="text-center">
                                    SUB NAME
                                </th>
                                <th class="text-center">
                                    CONTENT
                                </th>
                                <th class="text-center">
                                    PERIOD
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>

            <hr />
            <div class="row">
                <div class="col-sm-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
                <div class="col-sm-2">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default", @style = "float: right" })
                </div>
            </div>
        }

    </div>
</div>
@section Script {
    <script src="~/vendors/CustomInputFile/js/jquery.custom-file-input.js"></script>
    <script type="text/javascript">
        $('select').selectpicker({
            search: false
        });

        $("#contractDate").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            todayHighlight: true
        });

        $("#dateCreate").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            todayHighlight: true
        });

        $('#contractDate').on('changeDate', function () {
            var d = new Date($('#contractDate').datepicker('getDate'));
            if (d.getFullYear() > 2000) {
                $('#contractDate_val').val(
                    moment(d).format()
                );
            }
        });

        $('#dateCreate').on('changeDate', function () {
            var d = new Date($('#dateCreate').datepicker('getDate'));
            if (d.getFullYear() > 2000) {
                $('#dateCreate_val').val(
                    moment(d).format()
                );
            }
        });

        $('#contractDate').datepicker('setDate', 'today');
        $('#dateCreate').datepicker('setDate', 'today');

        $('#tab_logic').DataTable({
            'paging': false,
            'searching': false,
            'sorting': false,
            'info': false,
            'scrollX': true,
            'columnDefs': [
                { "width": "5%", "targets": 0 },
                { "width": "25%", "targets": 1 },
                { "width": "35%", "targets": 2 },
                { "width": "10%", "targets": 3 },
                { "width": "15%", "targets": 4 },
                { "width": "10%", "targets": 5 }
            ],
        });

        $('#tab_logic').parents('div.dataTables_wrapper').first().hide();

        var t = $('#tab_logic').DataTable();

        $("#add_row").click(function () {
            //if is first row
            var existEmptyRow = $('#tab_logic tbody').find('td.dataTables_empty');
            if (existEmptyRow.length == 1) {
                $('#tab_logic').parents('div.dataTables_wrapper').first().show();
                drawnewrow();
                drawnewrow();
                t.row(1).remove().draw();
            }
            else {
                drawnewrow();
            }
        });

        $('#tab_logic tbody').on('click', 'input#remove_row', function () {
            t
                .row($(this).parents('tr'))
                .remove()
                .draw();

            var allTr = $('#tab_logic').find('tr');
            allTr.each(function (index) {
                if (index > 0) {
                    var arrayNo = index - 1;
                    //change for tr
                    $(this).attr('id', 'addr' + arrayNo);

                    //change for td
                    var allTd = $(this).find('td');
                    //td0
                    $(allTd[0]).text(index);
                    //td1
                    var inputofTd1 = $(allTd[1]).find('input');
                    inputofTd1.attr('id', 'CONTRACT_SUB_' + arrayNo + '_DATE');
                    inputofTd1.attr('name', 'CONTRACT_SUB[' + arrayNo + '].DATE');
                    //td2
                    var inputofTd2 = $(allTd[2]).find('input');
                    inputofTd2.attr('id', 'CONTRACT_SUB_' + arrayNo + '_SUBNAME');
                    inputofTd2.attr('name', 'CONTRACT_SUB[' + arrayNo + '].SUBNAME');
                }
            });

            var existEmptyRow = $('#tab_logic tbody').find('td.dataTables_empty');
            if (existEmptyRow.length == 1) {
                $('#tab_logic').parents('div.dataTables_wrapper').first().hide();
            }
        });

        function drawnewrow() {
            //check row "No data" of datatables and remove it
            var existEmptyRow = $('#tab_logic tbody').find('td.dataTables_empty');
            if (existEmptyRow.length == 1) {
                existEmptyRow.parents('tbody').empty();
            }

            //rowcount is array Index for new row
            var rowcount = $('#tab_logic tbody tr').length;

            //Random ID for datetimepicker
            var ID = '_' + Date.now().toString(36) + Math.random().toString(36).substr(2);

            ////Mod new row
            //var First = rowcount + 1;
            //var Second = ""
            //    + "<div class='input-group date' id='dtpicker" + ID + "'>"
            //    + "<input class='form-control' autocomplete='off'>"
            //    + "<span class='input-group-addon'>"
            //    + "<span class='glyphicon glyphicon-calendar'></span>"
            //    + "</span>"
            //    + "</div>"
            //    + "<input id='CONTRACT_SUB_" + rowcount + "_DATE' name='CONTRACT_SUB[" + rowcount + "].DATE' type='hidden' value=''>";

            //var Third = "<input id='CONTRACT_SUB_" + rowcount + "_SUBNAME' name='CONTRACT_SUB[" + rowcount + "].SUBNAME' type='text' placeholder='SUBNAME' class='form-control'>";
            ////var Fourth = "<input type='file' name='subcontent' class='form-control'/>";
            //var Fourth = ""
            //    + "<div class='upload-wrapper'>"
            //    + "<div class='file-upload'>"
            //    + "<input type='file' />"
            //    + "<i class='glyphicon glyphicon-circle-arrow-up'></i>"
            //    + "</div>"
            //    + "</div>";

            //var Fifth = ""
            //    + "<select id='PERIOD" + ID + "' name='PERIOD_ID'>"
            //    + "<option selected='selected' value='000001'>Hợp đồng một năm</option>"
            //    + "<option value='000002'>Hợp đồng sáu tháng</option>"
            //    + "<option value='000003'>Hợp đồng</option>"
            //    + "</select>";
            //var Sixth = "<input type='button' id='remove_row' class='btn btn-danger btn-xs' value='Remove'>";

            //Mod new row
            var First = rowcount + 1;
            var Second = ''
                + '<div class="input-group date" id="dtpicker' + ID + '">'
                + '<input class="form-control" autocomplete="off">'
                + '<span class="input-group-addon">'
                + '<span class="glyphicon glyphicon-calendar"></span>'
                + '</span>'
                + '</div>'
                + '<input id="ContractSubViewModels_' + rowcount + '_DATE" name="ContractSubViewModels[' + rowcount + '].ContractSub.DATE" type="hidden" value="">';

            var Third = "<input id='ContractSubViewModels_" + rowcount + "_SUBNAME' name='ContractSubViewModels[" + rowcount + "].ContractSub.SUBNAME' type='text' placeholder='SUBNAME' class='form-control'>";

            var Fourth = ""
                + "<div class='upload-wrapper'>"
                + "<div class='file-upload'>"
                + "<input type='file' name='ContractSubViewModels[" + rowcount + "].ContractSub.ContentSubFile'/>"
                + "<i class='glyphicon glyphicon-circle-arrow-up'></i>"
                + "</div>"
                + "</div>";

            var periodIds = [];
            var periodNames = [];

            @foreach (var d in Model.Periods)
            {
                @:periodIds.push("@Html.Raw(d.PERIOD_ID)");
                @:periodNames.push("@Html.Raw(d.PERIOD_NAME)");
            }

            var opts = "";
            for (var i = 0; i < periodIds.length; i++) {
                opts = opts + "<option value='" + periodIds[i] + "'>" + periodNames[i] + "</option>";
            }

            var Fifth = ""
                + "<select id='PERIOD" + ID + "' name='ContractSubViewModels[" + rowcount + "].ContractSub.PERIODID'>"
                + opts
                + "</select>";

            var Sixth = "<input type='button' id='remove_row' class='btn btn-danger btn-xs' value='Remove'>";

            t.row.add([
                First,
                Second,
                Third,
                Fourth,
                Fifth,
                Sixth
            ]).node().id = 'addr' + rowcount;
            t.draw(true);

            //Date of subcontract
            var dtpickerX = "#dtpicker" + ID;

            $(dtpickerX).datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                todayHighlight: true
            });

            $(dtpickerX).on('changeDate', function () {
                var d = new Date($(this).datepicker('getDate'));
                if (d.getFullYear() > 2000) {
                    var dtval = $(this).siblings("input[type='hidden']");
                    dtval.val(
                        moment(d).format()
                    );
                }
            });

            $(dtpickerX).datepicker('setDate', 'today');

            //Period selection
            var selectX = "#PERIOD" + ID;
            $(selectX).selectpicker({
                container: 'body'
            });
        }
    </script>
}