@model Web_IT_HELPDESK.Incident

@{
    ViewBag.Title = "Solve";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Solve", "Incident", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="col-md-12 panel-info">
        <div class="content-box-header panel-heading">
            <div class="panel-title ">Solve Order Request</div>

            <div class="panel-options">
                <a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
                <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>
            </div>
        </div>
        <div class="content-box-large box-with-header">
            <div>
                <div class="row">
                    @Html.HiddenFor(model => model.Id)
                    <div class="col-sm-2">
                        No. <br />
                        @Html.TextBoxFor(model => model.Code, new { @class = "form-control", @readonly = "readonly", onfocus = "this.blur()", @style = "background-color:#DEDEDE;" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                    <div class="col-sm-2">
                        Plant <br />
                        @Html.TextBox("Plant", (string)ViewBag.plantName, new { @class = "form-control", @readonly = "readonly", onfocus = "this.blur()", @style = "background-color:#DEDEDE;" })
                        @Html.ValidationMessageFor(model => model.Plant)
                    </div>
                    <div class="col-sm-2">
                        Date time <br />
                        @Html.TextBoxFor(model => model.datetime, new { @class = "form-control", @readonly = "readonly", onfocus = "this.blur()", @style = "background-color:#DEDEDE;" })
                        @Html.ValidationMessageFor(model => model.datetime)
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-sm-2 text-alert" style="display: grid">
                        Status <br />
                        @Html.DropDownList("StatusId", null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "alert-danger" })
                    </div>
                    <div class="col-sm-2">
                        Level <br />
                        @Html.DropDownList("LevelId", null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LevelId)
                    </div>
                    <div class="col-sm-4">
                        Department <br />
                        @Html.DropDownList("DepartmentId", null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DepartmentId)
                    </div>
                </div>

                <hr />
                <div class="row">
                    <div class="col-sm-4">
                        Employee request <br />
                        @Html.TextBox("User_Create", (string)ViewBag.UserCreate, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-sm-4">
                        Employee solve <br />
                        @if (string.IsNullOrWhiteSpace(Model.User_resolve))
                        {
                            @*@Html.TextBox("User_resolve", (String)ViewBag.User_resolve, new { @class = "form-control", @readonly = "readonly" })*@
                            @Html.TextBoxFor(model => model.User_resolve, new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.User_resolve })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.User_resolve, new { @class = "form-control", @readonly = "readonly" })
                        }

                        @Html.ValidationMessageFor(model => model.User_resolve)
                    </div>
                    <div class="col-sm-4">
                        Attactment <br />
                        @Html.TextBoxFor(model => model.FileName, new { @class = "form-control", @readonly = "readonly", onfocus = "this.blur()", @style = "background-color:#DEDEDE;" })
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-6">
                        Note <br />
                        @Html.TextAreaFor(model => model.Note, new { @class = "form-control", @row = 3 })
                        @Html.ValidationMessageFor(model => model.Note)
                    </div>
                    <div class="col-sm-6">
                        Reply <br />
                        @Html.TextAreaFor(model => model.Reply, new { @class = "form-control", @row = 3 })
                        @Html.ValidationMessageFor(model => model.Reply)
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-10">
                        <input type="submit" value="Solve" class="btn btn-primary" />
                    </div>
                    <div class="col-sm-2">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default", @style = "float: right" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}
