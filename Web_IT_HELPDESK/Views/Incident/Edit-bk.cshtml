@model Web_IT_HELPDESK.Incident

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>


<div class="page-content">
    <div class="row">
        <div class="col-md-10">

            @using (Html.BeginForm("Edit", "Incident", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.ValidationSummary(true)
                <fieldset>
                    <legend>Edit Request</legend>

                    @Html.HiddenFor(model => model.Id)

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Code)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Code, new { @class = "text-box single-line", @readonly = "readonly", onfocus = "this.blur()", @style = "background-color:#DEDEDE;" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.datetime)
                    </div>
                    <div class="editor-field">
                        <!-- textbox_for set up read_only-->
                        @Html.TextBoxFor(model => model.datetime, new { @class = "text-box single-line", @readonly = "readonly", onfocus = "this.blur()", @style = "background-color:#DEDEDE;" })
                        @Html.ValidationMessageFor(model => model.datetime)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.StatusId, "Status")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("StatusId", string.Empty)
                        @Html.ValidationMessageFor(model => model.StatusId)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.LevelId, "Level")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("LevelId", string.Empty)
                        @Html.ValidationMessageFor(model => model.LevelId)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.DepartmentId, "Department")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("DepartmentId", string.Empty)
                        @Html.ValidationMessageFor(model => model.DepartmentId)
                    </div>

                    <!--<div class="editor-label">
                        @Html.LabelFor(model => model.Reply)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Reply)
                        @Html.ValidationMessageFor(model => model.Reply)
                    </div>-->

                    <div class="editor-label">
                        @Html.LabelFor(model => model.User_create)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.User_create, new { @class = "text-box single-line", @readonly = "readonly", onfocus = "this.blur()", @style = "background-color:#DEDEDE;" })
                        @Html.ValidationMessageFor(model => model.User_create)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.User_resolve)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.User_resolve)
                        @Html.ValidationMessageFor(model => model.User_resolve)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Note)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Note)
                        @Html.ValidationMessageFor(model => model.Note)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.FileName)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.FileName)
                        @Html.ValidationMessageFor(model => model.FileName)
                    </div>

                    <p>
                        <input type="file" id="image" name="image" />
                    </p>
                    <input type="submit" />

                    <br />
                </fieldset>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>