@model Web_IT_HELPDESK.Allocation

@using Web_IT_HELPDESK

@{
    ViewBag.Title = "Device Management - Provide";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Style {
    <style>
        .material {
            border: none;
            border-bottom: 1px solid #ccc;
            box-shadow: none;
            background: none !important;
        }

        textarea {
            resize: vertical;
            min-height: 34px;
            max-height: 102px;
        }
    </style>
}

<!--Region Device Information-->
<div class="col-md-12 panel-info">
    <div class="content-box-header panel-heading">
        <div class="panel-title ">Device Info</div>
    </div>
    <div class="content-box-large box-with-header">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <fieldset disabled style="background-color:none;">
                <div class="row">
                    <div class="col-md-4">
                        @Html.Label("Device Type", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Device_Type_Id", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Device_Type.Device_Type_Name ?? "" } })
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Device Name", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Device_Name", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Device_Name ?? "" } })
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Serial Number", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Serial Number", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Serial_No ?? "" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.Label("Contract", htmlAttributes: new { @class = "control-label" })
                        @if (((Device)ViewBag.Device).CONTRACT != null)
                        {
                            @Html.Editor("Contract_Id", null, new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).CONTRACT.CONTRACTNAME ?? "" } })
                        }
                        else
                        {
                            @Html.Editor("Contract_Id", null, new { htmlAttributes = new { @class = "form-control material", @Value = "" } })
                        }
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Purchase Date", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Purchase_Date", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Purchase_Date.HasValue ? ((DateTime)((Device)ViewBag.Device).Purchase_Date).ToString("dd/MM/yyyy") : "" } })
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Depreciation", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Depreciation", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Depreciation.HasValue ? ((DateTime)((Device)ViewBag.Device).Depreciation).ToString("dd/MM/yyyy") : "" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        @Html.Label("CPU", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("CPU", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).CPU ?? "" } })
                    </div>
                    <div class="col-md-3">
                        @Html.Label("RAM", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("RAM", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).RAM ?? "" } })
                    </div>
                    <div class="col-md-3">
                        @Html.Label("DISK", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("DISK", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).DISK ?? "" } })
                    </div>
                    <div class="col-md-3">
                        @Html.Label("Device Status", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Device_Status", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Device_Status ?? "" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @Html.Label("Operation System", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Operation_System", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Operation_System ?? "" } })
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Microsoft Office", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Office", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Office ?? "" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @Html.Label("OS License", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("OS_License", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).OS_License ?? "" } })
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Office License", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Office_License", new { htmlAttributes = new { @class = "form-control material", @Value = ((Device)ViewBag.Device).Office_License ?? "" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @Html.Label("Note", htmlAttributes: new { @class = "control-label" })
                        @Html.TextArea("Note", ((Device)ViewBag.Device).Note ?? "", htmlAttributes: new { @class = "form-control material", @rows = 2 })
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Addition Information", htmlAttributes: new { @class = "control-label" })
                        @Html.TextArea("Addition_Information", ((Device)ViewBag.Device).Addition_Information ?? "", htmlAttributes: new { @class = "form-control material", @rows = 2 })
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</div>
<!--End Region Device Information-->
<!--Region Create Form Allocation-->
<div class="col-md-12 panel-info">
    <div class="content-box-header panel-heading">
        <div class="panel-title ">Information Providing</div>
    </div>
    <div class="content-box-large box-with-header">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Device_Id, new { @Value = ((Device)ViewBag.Device).Device_Id })

                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Allocation_Code, "Allocation Code", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Allocation_Code, null, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.Allocation_Code } })
                        @Html.ValidationMessageFor(model => model.Allocation_Code, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Deliver, htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Deliver Name", null, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.DeliverName, @readonly = "readonly" } })
                        @Html.HiddenFor(model => model.Deliver, new { @Value = ViewBag.Deliver })
                        @Html.ValidationMessageFor(model => model.Deliver, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Delivery_Date, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group date" id="delidatepicker" data-date-end-date="0d">
                            @Html.Editor("Delivery Date", new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.HiddenFor(model => model.Delivery_Date, new { @id = "deliverydate_val" })
                        @Html.ValidationMessageFor(model => model.Delivery_Date, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Department_Id, "Department", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("Department_Id", null, new { @class = "departmentDDL", @disabled = "disabled", @style = "background-color: #eee" })
                        @Html.HiddenFor(model => model.Department_Id)
                        @Html.ValidationMessageFor(model => model.Department_Id, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Receiver, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("Receiver", null, htmlAttributes: new { @class = "receiverDDL" })
                        @Html.ValidationMessageFor(model => model.Receiver, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Return_Date, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group date" id="retudatepicker">
                            @Html.Editor("Return Date", new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @disabled = "disabled" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.HiddenFor(model => model.Return_Date, new { @id = "returndate_val" })
                        @Html.ValidationMessageFor(model => model.Return_Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
                <div class="row">
                    <div class="col-md-8">
                        @Html.LabelFor(model => model.Note, "Note", htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Note, new { @class = "form-control", @rows = 1 })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                    @if (new[] { 3, 6 }.Contains(((Device)ViewBag.Device).Device_Type.Device_Type_Id))
                    {
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.IP, "IP", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.IP, null, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IP, "", new { @class = "text-danger" })
                        </div>
                    }
                </div>
            </div>
            <hr>
            <div class="row">
                <div class="col-sm-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
                <div class="col-sm-2">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default", @style = "float: right" })
                </div>
            </div>
        }
    </div>
</div>
<!--End Region Create Form Allocation-->
@section Script {
    <script type="text/javascript">
        $("#delidatepicker").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            todayHighlight: true,
            endDate: 'today'
        });

        $('#retudatepicker').datepicker();

        $('#delidatepicker').on('changeDate', function () {
            var d = new Date($('#delidatepicker').datepicker('getDate'));
            if (d.getFullYear() > 2000) {
                $('#deliverydate_val').val(
                    moment(d).format()
                );
            }
        });

        $("#delidatepicker").datepicker("setDate", 'today');

        $('select').selectron({
            search: true
        });

        $('.receiverDDL select').on('change', function () {
            getDeptVal($(this).val());
        });

        function getDeptVal(receiverId) {
            if (receiverId != null && receiverId != '') {
                $.ajax({
                    url: '@Url.Action("getDeptVal", "Allocations")',
                    type: 'GET',
                    dataType: 'json',
                    data: { receiverId: receiverId },
                    cache: false,
                    success: function (result) {
                        if (result != null && result != '') {
                            $('.departmentDDL select').val(result).trigger
                                ('selectron.change');
                            $('input[type=hidden]#Department_Id').val(result);
                        } else {
                            $('.departmentDDL select').val(null).trigger('selectron.change');
                            $('input[type=hidden]#Department_Id').val(null);
                        }
                    },
                    error: function (result) {
                        $('.departmentDDL select').val(null).trigger
                            ('selectron.change');
                        $('input[type=hidden]#Department_Id').val(null);
                    }
                });
            }
            else {
                $('.departmentDDL select').val(null).trigger
                    ('selectron.change');
                $('input[type=hidden]#Department_Id').val(null);
            }
        };

        $(document).on("keydown", "form", function (event) {
            return event.key != "Enter";
        });
    </script>
}